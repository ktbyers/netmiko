---
name: Netmiko
on: [push,pull_request]
env:
  environment: gh_actions
  FORCE_COLOR: 1

jobs:
  linters:
    name: linters
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v1
        id: cp311
        with:
          python-version: '3.11'
          architecture: x64

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.3.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache Poetry virtualenv
        uses: actions/cache@v2
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-${{ runner.os }}-cache-${{ steps.cp311.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Run pylama
        run: |
          poetry run pylama .

      - name: Run black
        run: |
          poetry run black --check .

      - name: Run mypy
        run: |
          poetry run mypy --version
          poetry run mypy ./netmiko/
 
  pytest:
    name: Testing on Python ${{ matrix.python-version }} (${{ matrix.platform}})
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]
        platform: [ubuntu-20.04]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v1
        id: py_ver
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: '3.11'
          architecture: x64

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.3.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache Poetry virtualenv
        uses: actions/cache@v2
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-${{ runner.os }}-cache-${{ steps.py_ver.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
        if: ${{ matrix.platform != 'windows-latest' }}  # windows hangs if using a cached venv

      - name: Install Dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Run Tests
        run: |
          poetry run pytest -v -s tests/test_import_netmiko.py
          poetry run pytest -v -s tests/unit/test_base_connection.py
          poetry run pytest -v -s tests/unit/test_utilities.py
          poetry run pytest -v -s tests/unit/test_ssh_autodetect.py
          poetry run pytest -v -s tests/unit/test_connection.py
          poetry run pytest -v -s tests/unit/test_entry_points.py
